{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,gBAAiBF,SAASC,cAAc,uBACxCE,eAAgBH,SAASC,cAAc,sBACvCG,YAAaJ,SAASC,cAAc,wBACpCI,YAAaL,SAASC,cAAc,WAGtC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA2BbV,EAAKO,YAAYW,iBAAiB,SArBlC,SAAyBC,GACvBA,EAAEC,iBACF,MAAMC,EAASC,OAAOtB,EAAKM,YAAYiB,OAEvC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IAC1BhB,IACGiB,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBnB,QAAiBC,MAAU,IAGnDmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBrB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  firstDelayField: document.querySelector('input[name=\"delay\"]'),\n  delayStepField: document.querySelector('input[name=\"step\"]'),\n  amountField: document.querySelector('input[name=\"amount\"]'),\n  submitBtnEl: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n//\n\nfunction onCreatePromise(e) {\n  e.preventDefault();\n  const amount = Number(refs.amountField.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise()\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\n// Create X promises after clicking 'Create promises' button\n\nrefs.submitBtnEl.addEventListener('click', onCreatePromise);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","firstDelayField","delayStepField","amountField","submitBtnEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amount","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b98630da.js.map"}